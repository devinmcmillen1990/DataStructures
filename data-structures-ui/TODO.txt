1. Fix "https://www.solutionsarchichat.com/visualizations"
2. Setup Tailwind CSS to match layout of React App >> setup bundler for tailwind.
3. Get navbar and footer from ReactJS app (Update meta and structured data)
    3.a. Update ReactJS application Navbar with this application.
4. Setup Links for resources
5. Download papers from resources and provide links for direct downloads.
6. Add Page reference for pseudo code
7. Extract out pseudo code component to /core and resources
8. Setup UI tests to verify that we don't break anything.
9. Update README.md with some decent descriptions

* Verify Structured data
* Verify <head> meta tags.
* Verify HTML structure is SEO friendly.
* Verify CSS classes are SEO friendly.
* Add Propeller Ads stuff.
** ReactJS site - Setup Pop under for these links.

Upcoming data structures:
Persistent Data Structures to Build
Queues & Lists
 Real-Time Queue
 Banker's Queue
 Functional Deque
 Persistent Singly Linked List -> Verify that our's is Persistent/Functional and then implement a visual
 Persistent Doubly Linked List

Stacks
 Functional Stack

Trees
 Binary Tree
 AVL Tree
 Red-Black Tree
 Trie (Prefix Tree)
 Finger Tree
 Merkle Tree ‚Üê great for blockchain / data integrity

Heaps
 Binomial Heap
 Leftist Heap
 Skew Heap

Other
 Persistent Array
 Zipper (navigation and mutation in trees)

** Get Paper on why discord switched to Rust from Go because of garbage collector with LRU cache (include in LRU example)
